###################################################
#This code correctly implements the given C code  # 
#						  #
# 	Author: Mustafa Acıkaraoğlu, Merve Barın  #
#						  #
###################################################

addi $1,$0,0 # 1'st address counter, initial counter
addi $2,$0,4 # 2'nd address counter
addi $3,$0,4 # threshold for the counter
addi $4,$0,0 # sum of lower bits
addi $5,$0,0 # sum of higher bits
beq $1,$3,16 # check if $1 is equal to $3 if not cntinue to loop ,else exit by jumping to 16'th line which is empty
lw $6,$1,0 # load from memory (1'st array) = [MEM + $1 + 0000 0000 0000 0000]
lw $7,$2,0 # load from memory (2'nd array) = [MEM + $2 + 0000 0000 0000 0000]
mult $6,$7 # multiply $6 and $
mflo $6 # load low bits of the result
mfhi $7 #load high bits of the result
add $4,$4,$6 # sum the low bits (tracks the carry as well)
addhi $5,$5,$7 # sum the high bits with addition of the carry as well
addi $1,$1,1 # increase counter, 1'st array address by 1 (normally this is 4)
addi $2,$2,1 # increase 2'nd array address by 1 (normally this is 4)
j 5 # (jump to the 5'th line to continue the iteration)
